<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Michał Kowol</title>
    <link>https://michalkowol.github.io/</link>
    <description>Recent content on Michał Kowol</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 23 Jan 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://michalkowol.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How to deserialize abstract types from JSON using Jackson?</title>
      <link>https://michalkowol.github.io/posts/2017-01-23-jackson/</link>
      <pubDate>Mon, 23 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://michalkowol.github.io/posts/2017-01-23-jackson/</guid>
      <description>Overview Sometimes you need deserialize JSON to Java abstract types. Good example is list of animals.
{ &amp;quot;animals&amp;quot;: [ { &amp;quot;name&amp;quot;: &amp;quot;Szarik&amp;quot;, &amp;quot;ageInYears&amp;quot;: 3, &amp;quot;type&amp;quot;: &amp;quot;dog&amp;quot; }, { &amp;quot;name&amp;quot;: &amp;quot;Filemon&amp;quot;, &amp;quot;livesLeft&amp;quot;: 6, &amp;quot;type&amp;quot;: &amp;quot;cat&amp;quot; } ] }  In this case you need to serialize animals to specific types using type property.
Java Data Classes (Lombock) import lombok.Data; interface Animal { } @Data class AnimalsContainer { private final List&amp;lt;Animal&amp;gt; animals = new LinkedList&amp;lt;&amp;gt;(); } @Data class Dog implements Animal { private final String name; private final Integer ageInYears; } @Data class Cat implements Animal { private final String name; private final Integer livesLeft; }  Json Type Info Annotations import com.</description>
    </item>
    
    <item>
      <title>How to configure LB-LINK</title>
      <link>https://michalkowol.github.io/posts/2017-01-21-lb-link/</link>
      <pubDate>Sat, 21 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://michalkowol.github.io/posts/2017-01-21-lb-link/</guid>
      <description>Overview Do you want to change WiFi to regular cable connection. Or you need cheap WiFI amplifier? This post is for you!
You can by LB-LINK BL-MP01 for only 13$ (52 PLN). It is really cheap and it does it work.
Repeater (client mode)  If you want to change WiFi to regular cable connection you need to switch device to Repeater mode.  Connect power and Ethernet cable. Make sure power mode is on.</description>
    </item>
    
    <item>
      <title>Encrypt zip files on MacOS</title>
      <link>https://michalkowol.github.io/posts/2016-12-16-encrypted-zip/</link>
      <pubDate>Fri, 16 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://michalkowol.github.io/posts/2016-12-16-encrypted-zip/</guid>
      <description>` przykład: `zip -er aurator.zip aurator/` ![img](/img/zip/005-zip.png) 1. Wpisz hasło dwa razy w okienku terminala (znaki hasła nie będą widoczne). ![img](/img/zip/006-zip.png) 1. Zaszyfrowany plik zip został stworzony. ![img](/img/zip/008-zip.png) 1. Odszyfrowywanie: ![img](/img/zip/009-zip.png) ![img](/img/zip/010-zip.png) --  Press cmd + space, type &amp;lsquo;terminal&amp;rsquo; and press enter.  Type cd (with space) and do not press enter. Drag-and-drop folder you want to zip to terminal window and press enter.  Type cd ...  Type zip -er &amp;lt;filename.</description>
    </item>
    
    <item>
      <title>Photo to scan in Photoshop</title>
      <link>https://michalkowol.github.io/posts/2016-12-10-photo-to-scan-in-photoshop/</link>
      <pubDate>Sat, 10 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://michalkowol.github.io/posts/2016-12-10-photo-to-scan-in-photoshop/</guid>
      <description> Photo to scan in Photoshop   Layer &amp;gt; New Adjustment Layer &amp;gt; Gradient Map Layer &amp;gt; New Adjustment Layer &amp;gt; Levels  Links  http://tricky-photoshop.com/make-document-looks-like-scanned-copy-photoshop/  </description>
    </item>
    
    <item>
      <title>User management in Linux</title>
      <link>https://michalkowol.github.io/posts/2016-12-12-user-management/</link>
      <pubDate>Sat, 10 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://michalkowol.github.io/posts/2016-12-12-user-management/</guid>
      <description>Add, delete users and groups  addgroup groupname - creates new group adduser username - creates new user usermod -a -G groupname1,groupane2 username - adds existing user to existing group deluser username - deletes user groups username - list all groups for user  chmod    Mode Name     r read   w write   x execute   X special execute   s setuid/gid   t sticky       Reference Class     u owner   g group   o others   a all       Operator Description     + adds the specified modes to the specified classes   - removes the specified modes from the specified classes   = the modes specified are to be made the exact modes for the specified classes    Files permissions  chown -R username:groupname path - changes file/directory owner and its group chown -R :groupname path - changes file/directory group chmod -R a-x+X path - remove the execute permission on all files in a directory tree, while allowing for directory browsing chmod -R a+X directory - allowing for directory browsing for all  Links  In Unix, how do I change the permissions for a file?</description>
    </item>
    
    <item>
      <title>Simple HTTP servers in Java</title>
      <link>https://michalkowol.github.io/posts/2016-12-01-java-simple-http-servers/</link>
      <pubDate>Thu, 01 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://michalkowol.github.io/posts/2016-12-01-java-simple-http-servers/</guid>
      <description>Java build-in Since Java SE 6, there&amp;rsquo;s a builtin HTTP server in Sun Oracle JRE. The com.sun.net.httpserver package summary outlines the involved classes and contains examples.
import com.sun.net.httpserver.HttpExchange; import com.sun.net.httpserver.HttpHandler; import com.sun.net.httpserver.HttpServer; import lombok.SneakyThrows; import java.io.IOException; import java.io.OutputStream; import java.net.InetSocketAddress; public class BootSunHttp { public static void main(String[] args) { new BootSunHttp().bootServer(); } @SneakyThrows private void bootServer() { HttpServer server = HttpServer.create(new InetSocketAddress(8000), 0); server.createContext(&amp;quot;/test&amp;quot;, new SimpleHandler()); server.setExecutor(null); // creates a default executor server.</description>
    </item>
    
    <item>
      <title>/boot 100% and can&#39;t purge</title>
      <link>https://michalkowol.github.io/posts/2016-11-07-linux-headers/</link>
      <pubDate>Mon, 07 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://michalkowol.github.io/posts/2016-11-07-linux-headers/</guid>
      <description>Solution  sudo apt-get install &amp;ndash;fix-broken should fail but list unused packets free them one by one using sudo dpkg --purge .... If a packet refuse to uninstall due to dependencies, just advance to the next one. After uninstalling everything you could, sudo apt-get install --fix-broken again, and this time it should work.  So, after upgrading kernels and rebooting to test it, you can remove all other kernels with:</description>
    </item>
    
    <item>
      <title>How to server cifi shared folder using nginx.</title>
      <link>https://michalkowol.github.io/posts/2016-11-07-nginx-cifs/</link>
      <pubDate>Mon, 07 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://michalkowol.github.io/posts/2016-11-07-nginx-cifs/</guid>
      <description>Setup Create folder /media/storage/dir/
mkdir -p /media/storage/dir/  Next, mount shared directory. uid and gid are very important because without this you will get 403 Forbidden.
sudo mount -t cifs -o uid=www-data,gid=www-data,ro,username=username,password=password //10.0.0.2/shared/ /media/storage/dir/   -t cifs - type of fs (cifs - Common Internet File System, also known as smb) uid - specific user gid - specific groutp ro - read-only rw - read-write username - shared directory username password - shared directory password  Modify nginx config (/etc/nginx/sites-available/somefile)</description>
    </item>
    
    <item>
      <title>Set locale on your linux</title>
      <link>https://michalkowol.github.io/posts/2016-11-07-locale/</link>
      <pubDate>Mon, 07 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://michalkowol.github.io/posts/2016-11-07-locale/</guid>
      <description>Locale check which locales are supported:
locale -a  add the locales you want (for example ru):
sudo locale-gen ru_RU sudo locale-gen ru_RU.UTF-8  run this update comand
sudo update-locale  How do I add locale to ubuntu server?</description>
    </item>
    
    <item>
      <title>Samba (smb)</title>
      <link>https://michalkowol.github.io/posts/2016-11-04-smb-howto/</link>
      <pubDate>Fri, 04 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://michalkowol.github.io/posts/2016-11-04-smb-howto/</guid>
      <description>Configuration On Ubuntu configuration file is located in /etc/samba/smb.conf. You need root privileges to edit it.
Sample file [global] workgroup = WORKGROUP server string = servername unix password sync = yes access based share enum = yes [homes] comment = Home Directories browseable = no read only = no writable = yes guest ok = no create mask = 0600 directory mask = 0700 security = user [accounting] comment = Accounting Department Directory writable = yes valid users = @account path = /media/storage/accounting create mask = 0660 directory mode = 0770 force group = account [public] comment = Public browsable = yes path = /media/storage/public public = yes read only = no writable = yes guest ok = yes create mask = 0666 directory mode = 0777  You need to set public storage directory permissions to be 777 (drwxrwxrwx) and for directories shared in group 770 (drwxrwx---).</description>
    </item>
    
    <item>
      <title>Backups with rsnapshot</title>
      <link>https://michalkowol.github.io/posts/2016-11-03-backup-with-rsnapshot/</link>
      <pubDate>Thu, 03 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://michalkowol.github.io/posts/2016-11-03-backup-with-rsnapshot/</guid>
      <description>Docker test enviroment Dockerfile:
FROM ubuntu:17.10 RUN apt-get update &amp;amp;&amp;amp; apt-get install -y rsnapshot ENTRYPOINT [&amp;quot;/bin/bash&amp;quot;]  and run it with
docker build -t ubuntu-rsnapshot . docker run --name ubuntu-rsnapshot-bash -it ubuntu-rsnapshot  to attach another terminal you can use
docker exec -it ubuntu-rsnapshot-bash /bin/bash  Rsnapshot configuration You can find configuration in /etc/rsnapshot.conf
The most interesing parts of config:
config_version 1.2 cmd_cp	/bin/cp cmd_rm	/bin/rm cmd_rsync	/usr/bin/rsync cmd_ssh	/usr/bin/ssh cmd_logger	/usr/bin/logger verbose	2 loglevel	3 logfile	/var/log/rsnapshot.</description>
    </item>
    
    <item>
      <title>Midnight Commander</title>
      <link>https://michalkowol.github.io/posts/2016-11-03-midnight-commander/</link>
      <pubDate>Thu, 03 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://michalkowol.github.io/posts/2016-11-03-midnight-commander/</guid>
      <description>Overview Midnight Commander is based on versatile text interfaces, such as Ncurses or S-Lang, which allows it to work on a regular console, inside an X Window terminal, over SSH connections and all kinds of remote shells.
Shorcuts  Ctrl + x, q quick preview (x = comman, q = quick view) Shift + F6 rename file Ctrl + o open/close terminal Ctrl + s cd in active panel Esc + c quick cd Esc + i open same directory in another panel Ctrl + r refresh  Configure open as View/Open Menu: Command &amp;gt; Edit extension file</description>
    </item>
    
    <item>
      <title>nmap</title>
      <link>https://michalkowol.github.io/posts/2016-11-03-nmap/</link>
      <pubDate>Thu, 03 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://michalkowol.github.io/posts/2016-11-03-nmap/</guid>
      <description>Overview Nmap (&amp;ldquo;Network Mapper&amp;rdquo;) is a free and open source utility for network discovery and security auditing. Many systems and network administrators also find it useful for tasks such as network inventory, managing service upgrade schedules, and monitoring host or service uptime. Nmap uses raw IP packets in novel ways to determine what hosts are available on the network, what services (application name and version) those hosts are offering, what operating systems (and OS versions) they are running, what type of packet filters/firewalls are in use, and dozens of other characteristics.</description>
    </item>
    
    <item>
      <title>How to: rsync</title>
      <link>https://michalkowol.github.io/posts/2016-10-30-rsync-how-to/</link>
      <pubDate>Sun, 30 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://michalkowol.github.io/posts/2016-10-30-rsync-how-to/</guid>
      <description>Documentation rsync selected options
-a, --archive It is more commonly used than -r (recursive) and is usually what you want to use. -z, --compress With this option, rsync compresses the file data as it is sent to the destination machine -v, --verbose This option increases the amount of information the daemon logs during its startup phase. -x, --one-file-system This tells rsync to avoid crossing a filesystem boundary when recursing. -A, --acls Preserve ACLs (implies -p).</description>
    </item>
    
    <item>
      <title>Synology ssh with public key</title>
      <link>https://michalkowol.github.io/posts/2016-10-29-synology/</link>
      <pubDate>Sat, 29 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://michalkowol.github.io/posts/2016-10-29-synology/</guid>
      <description>Generating SSH keys First of all generate SSH private and public keys on your local machine.
local&amp;gt; ssh-keygen -t rsa -b 4096 -C &amp;quot;yourmail@example.com&amp;quot;  New user It is good idea to create dedicated user for rsync.
synology&amp;gt; adduser rsync  SSH with public key on Synology Directories By default Synology sets home directory rights to 777. sshd is very picky and its needs different home directory rights.
synology&amp;gt; chmod 755 /var/services/homes/rsync  Then you need to create the authorized_keys file on Synlogy.</description>
    </item>
    
    <item>
      <title>Akka (notes, part 1)</title>
      <link>https://michalkowol.github.io/posts/2014-12-01-akka-notes-part-1/</link>
      <pubDate>Mon, 01 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>https://michalkowol.github.io/posts/2014-12-01-akka-notes-part-1/</guid>
      <description>Akka traits Akka has 4 main traits. Those are:
 Responsive - the system responds very fast. Resilient - the system stays responsive in the face of failure. Elastic - the system stays responsive under varying workload. You can easily add/remove nodes (machines) to/from system. Message Driven - object talks through messages. Objects are loosely coupled. There is a big diffrence between event and message - every message has recipient address, but events don&amp;rsquo;t have to have it.</description>
    </item>
    
    <item>
      <title>Scala (notes)</title>
      <link>https://michalkowol.github.io/posts/2014-11-28-scala-notes/</link>
      <pubDate>Fri, 28 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>https://michalkowol.github.io/posts/2014-11-28-scala-notes/</guid>
      <description>Functions without parameters def foo: String = ??? def bar(): String = ???  The first one is better, bacause you can easly replace it with val. In fact, otheres developers shouldn&amp;rsquo;t know if you use val or def. It should be transparent (you shouldn&amp;rsquo;t use parentheses).
Default parameters class Welcome(message: String = &amp;quot;default&amp;quot;)  Public API If we define public API, all methods and parameters should have explicite type.</description>
    </item>
    
    <item>
      <title>&#34;Closures&#34; in JavaScript</title>
      <link>https://michalkowol.github.io/posts/2014-07-22-closures-in-javascript/</link>
      <pubDate>Tue, 22 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>https://michalkowol.github.io/posts/2014-07-22-closures-in-javascript/</guid>
      <description>Closures Closures in JS can simulate classes. Polymorphism, encapsulation and inheritance are avilable in this aproach.
function _extend(object, source) { for (var key in source) { if (source.hasOwnProperty(key)) { object[key] = source[key]; } } return object; }  var mtv = (function (mtv) { &#39;use strict&#39;; mtv.ClassA = function (a) { var self = {}; self.a = a; function privateInA () { console.log(&#39;ClassA.privateInA.start&#39;); console.log(self.a); console.log(&#39;ClassA.privateInA.end&#39;); } self.bar = function () { console.</description>
    </item>
    
    <item>
      <title>&#34;Classes&#34; and Singletions in JavaScript</title>
      <link>https://michalkowol.github.io/posts/2014-04-24-classes-and-singletions-in-javascript/</link>
      <pubDate>Thu, 24 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://michalkowol.github.io/posts/2014-04-24-classes-and-singletions-in-javascript/</guid>
      <description>Overview Javascript way to simulate Object-Oriented-Programming.
Classes In JS there are a lot of way to simulate classes.
Example 1 var com = com || {}; com.Video = function (videoID) { &#39;use strict&#39;; var self = {}; function bar() { return &#39;bar&#39; + videoID; } self.foo = function () { return &#39;foo&#39; + bar() + videoID; }; return self; }; com.Video(&#39;123&#39;).foo();  Example 2 var com = com || {}; (function () { &#39;use strict&#39;; com.</description>
    </item>
    
    <item>
      <title>Java with Spring</title>
      <link>https://michalkowol.github.io/posts/2013-12-05-java-with-spring/</link>
      <pubDate>Thu, 05 Dec 2013 00:00:00 +0000</pubDate>
      
      <guid>https://michalkowol.github.io/posts/2013-12-05-java-with-spring/</guid>
      <description>Overview Post bellow refers to the old version of Spring. In modern Spring application you don&amp;rsquo;t need to write xml files. You can do almost everything from java code.
Example interface Fruit { String eat(); String getName(); } interface Peelable { String peel(); } interface PeelableFruit extends Fruit, Peelable { } class Apple implements PeelableFruit { @Override public String peel() { return &amp;quot;peeling &amp;quot; + getName(); } @Override public String eat() { return &amp;quot;omnonnom &amp;quot; + getName(); } @Override public String getName() { return &amp;quot;apple&amp;quot;; } } class Peeler { String peel(Peelable peelable) { return peelable.</description>
    </item>
    
    <item>
      <title>Java Puzzle - initialization order</title>
      <link>https://michalkowol.github.io/posts/2013-11-22-java-puzzle/</link>
      <pubDate>Fri, 22 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>https://michalkowol.github.io/posts/2013-11-22-java-puzzle/</guid>
      <description>Overview When I applied my first full-time job, a guy during recruitment showed me the following code and asked me what would happen? It supposed to show if I understand initialization order in Java.
Example class ClassMain { private final String mainVar = &amp;quot;Main&amp;quot;; ClassMain() { showMeTheMain(); } protected void showMeTheMain() { System.out.println(mainVar); } } class ClassA extends ClassMain { private String a = &amp;quot;qwerty&amp;quot;; ClassA() { showMeTheMain(); } @Override public void showMeTheMain() { System.</description>
    </item>
    
  </channel>
</rss>