<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <link>https://michalkowol.github.io/tags/rsync/index.xml</link>
    <description>Recent content on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="https://michalkowol.github.io/tags/rsync/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>How to: rsync</title>
      <link>https://michalkowol.github.io/posts/2016-10-30-rsync-how-to/</link>
      <pubDate>Sun, 30 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://michalkowol.github.io/posts/2016-10-30-rsync-how-to/</guid>
      <description>

&lt;h3 id=&#34;documentation&#34;&gt;Documentation&lt;/h3&gt;

&lt;p&gt;rsync selected options&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;-a, --archive It is more commonly used than -r (recursive) and is usually what you want to use.
-z, --compress With this option, rsync compresses the file data as it is sent to the destination machine
-v, --verbose This option increases the amount of information the daemon logs during its startup phase.
-x, --one-file-system This tells rsync to avoid crossing a filesystem boundary when recursing.
-A, --acls Preserve ACLs (implies -p).
-H, --hard-links This tells rsync to look for hard-linked files.
-X, --xattrs This option causes rsync to update the remote extended attributes to be the same as the local ones.
-e, --rsh=COMMAND Specify the remote shell to use.
--delete-after Receiver deletes after transfer, not before.
-n, --dry-run This makes rsync perform a trial run that doesn&#39;t make any changes.
--progress This option tells rsync to print information showing the progress of the transfer.
--human-readable Output numbers in a more human-readable format.
--append-verify Append w/old data in file checksum
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;examples&#34;&gt;Examples&lt;/h3&gt;

&lt;p&gt;Simple examples&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# without ssh
rsync -avzx . user@hostname::NetBackup/owncloud
# with ssh
rsync -avzx -e ssh . user@hostname:~/tmp
# with ssh (from server to client)
rsync -avzx -e ssh user@hostname:~/tmp .

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;More advanced examples&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# with dry run (no changes - files would be deleted on server after success)
rsync -avzx --dry-run --delete-after -e ssh . user@hostname:~/tmp
# files will be deleted on server after success
rsync -avzx --delete-after -e ssh . user@hostname:~/tmp
# with ssh on port 48419
rsync -avzx -e &amp;quot;ssh -p 48419&amp;quot; . user@hostname:~/tmp
# full example
rsync -avzx --progress --human-readable -e &amp;quot;ssh -p 48419&amp;quot; . user@hostname:~/tmp
# full example (with delete after)
rsync -avzx --delete-after --progress --human-readable -e &amp;quot;ssh -p 48419&amp;quot; . user@hostname:~/tmp
# with mac to linux file change encoding
rsync -avzx --iconv=utf-8-mac,utf-8 --progress --human-readable -e ssh . user@hostname:~/tmp
# with append w/old data in file checksum
rsync -avzx --append-verify --progress --human-readable -e ssh . user@hostname:~/tmp
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Combined&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;rsync -avzx --iconv=utf-8-mac,utf-8 --append-verify --progress --human-readable -e &amp;quot;ssh -p 48419&amp;quot; . user@hostname:~/tmp
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;On windows (&lt;a href=&#34;https://www.itefix.net/cwrsync&#34;&gt;cwRsync&lt;/a&gt;)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;rsync -avzx --progress --human-readable -e &amp;quot;ssh -p 48419 -i c:\ssh\id_rsa&amp;quot; &amp;quot;c/dir/dir/&amp;quot; user@hostname:~/tmp/
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;notes&#34;&gt;Notes&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;trailing &lt;code&gt;/&lt;/code&gt; in directory name is &lt;strong&gt;very&lt;/strong&gt; important - there is a big difference between &lt;code&gt;rsync dir1 dir2&lt;/code&gt; and &lt;code&gt;rsync dir1/ dir2/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.digitalocean.com/community/tutorials/how-to-use-rsync-to-sync-local-and-remote-directories-on-a-vps&#34;&gt;https://www.digitalocean.com/community/tutorials/how-to-use-rsync-to-sync-local-and-remote-directories-on-a-vps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;always use &lt;code&gt;--iconv=utf-8-mac,utf-8&lt;/code&gt; when initialising the rsync from the mac&lt;/li&gt;
&lt;li&gt;always use &lt;code&gt;--iconv=utf-8,utf-8-mac&lt;/code&gt; when initialising the rsync from the linux&lt;/li&gt;
&lt;li&gt;the &lt;code&gt;--iconv&lt;/code&gt; argument cam with &lt;code&gt;rsync&lt;/code&gt; version 3.0.0 (release notes) OSX provides only version 2.6.9&lt;/li&gt;
&lt;li&gt;upgrade rsync on mac &lt;code&gt;brew update &amp;amp;&amp;amp; brew tap homebrew/dupes &amp;amp;&amp;amp; brew install rsync&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--append-verify&lt;/code&gt; isn&amp;rsquo;t dangerous: It will always read and compare the data on both ends and not just assume they&amp;rsquo;re equal. It does this using checksums, so it&amp;rsquo;s easy on the network, but it does require reading the shared amount of data on both ends of the wire before it can actually resume the transfer by appending to the target.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thus you need to get a newer version latest is 3.1.1 (2.6.9 was released in 2006)&lt;/p&gt;

&lt;p&gt;I would also get a newer version rsync as xattr copying was also introduced after 2.6.9&lt;/p&gt;

&lt;h3 id=&#34;references&#34;&gt;References&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://linux.die.net/man/1/rsync&#34;&gt;rsync man&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.itefix.net/cwrsync&#34;&gt;cwRsync&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Synology ssh with public key</title>
      <link>https://michalkowol.github.io/posts/2016-10-29-synology/</link>
      <pubDate>Sat, 29 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://michalkowol.github.io/posts/2016-10-29-synology/</guid>
      <description>

&lt;p&gt;First of all generate ssh private and public key on your local machine.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;local&amp;gt; ssh-keygen -t rsa -b 4096 -C &amp;quot;yourmail@example.com&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It is good idea to create dedicated user for &lt;code&gt;rsync&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;synology&amp;gt; adduser rsync
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;By default Synology sets home directory rights to &lt;code&gt;777&lt;/code&gt;. &lt;code&gt;sshd&lt;/code&gt; is very picky and its needs different home directory rights.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;synology&amp;gt; chmod 755 /var/services/homes/rsync
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now, you need to modify &lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt; on Synlogy. Make sure it has the following line uncommented.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# ...
PubkeyAuthentication yes
# ...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then you need to create the &lt;code&gt;authorized_keys&lt;/code&gt; file on Synlogy. To this file remote users add their public keys. File permissions are crucial here and if they are wrong ssh will refuse you.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;synology&amp;gt; su -s rsync
synology&amp;gt; cd
synology&amp;gt; pwd # make sure you are in /var/services/homes/rsync
synology&amp;gt; mkdir .ssh
synology&amp;gt; chmod 700 .ssh
synology&amp;gt; touch .ssh/authorized_keys
synology&amp;gt; chmod 600 .ssh/authorized_keys
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Typically you want the &lt;code&gt;.ssh&lt;/code&gt; directory permissions to be &lt;code&gt;700 (drwx------)&lt;/code&gt;, home directory to be &lt;code&gt;755 (drwxr-xr-x)&lt;/code&gt; and the public key (&lt;code&gt;.pub file&lt;/code&gt;) to be &lt;code&gt;644 (-rw-r--r--)&lt;/code&gt;. Your private key (&lt;code&gt;id_rsa&lt;/code&gt;) should be &lt;code&gt;600 (-rw-------)&lt;/code&gt;. &lt;code&gt;authorized_keys&lt;/code&gt; should be &lt;code&gt;600 (-rw-------)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Then add public key corresponding to a private key in one line in &lt;code&gt;authorized_keys&lt;/code&gt;. You can use this command.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;local&amp;gt; cat ~/.ssh/id_rsa.pub | ssh user@hostname &#39;cat &amp;gt;&amp;gt; .ssh/authorized_keys&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now restart Synology or quicker just force the ssh deamon to reload its config&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;synology&amp;gt; ps | grep sshd
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;synology&amp;gt; kill -HUP $PID
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You should now be able ssh to Synology as rsync with no password.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;local&amp;gt; ssh rsync@synology
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note: How to change shell for user?&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;chsh -s /usr/local/bin/bash username
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;/sbin/nologin&lt;/code&gt; disables login.&lt;/p&gt;

&lt;h3 id=&#34;references&#34;&gt;References&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://karlcode.owtelse.com/blog/2015/06/27/passwordless-ssh-on-synology/&#34;&gt;Passwordless Ssh on Synology&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>