<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bean on Michał Kowol</title>
    <link>https://michalkowol.github.io/tags/bean/</link>
    <description>Recent content in Bean on Michał Kowol</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 05 Dec 2013 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://michalkowol.github.io/tags/bean/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Java with Spring</title>
      <link>https://michalkowol.github.io/posts/2013-12-05-java-with-spring/</link>
      <pubDate>Thu, 05 Dec 2013 00:00:00 +0000</pubDate>
      
      <guid>https://michalkowol.github.io/posts/2013-12-05-java-with-spring/</guid>
      <description>Overview Post bellow refers to the old version of Spring. In modern Spring application you don&amp;rsquo;t need to write xml files. You can do almost everything from java code.
Example interface Fruit { String eat(); String getName(); } interface Peelable { String peel(); } interface PeelableFruit extends Fruit, Peelable { } class Apple implements PeelableFruit { @Override public String peel() { return &amp;quot;peeling &amp;quot; + getName(); } @Override public String eat() { return &amp;quot;omnonnom &amp;quot; + getName(); } @Override public String getName() { return &amp;quot;apple&amp;quot;; } } class Peeler { String peel(Peelable peelable) { return peelable.</description>
    </item>
    
  </channel>
</rss>